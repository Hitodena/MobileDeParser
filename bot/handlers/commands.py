from aiogram import Router
from aiogram.filters import Command
from aiogram.types import BotCommand, Message
from loguru import logger

from bot.models.bot_config import BotConfig
from bot.services.parser_manager import ParserManager


class CommandHandlers:
    def __init__(self, config: BotConfig, parser_manager: ParserManager):
        self.config = config
        self.parser_manager = parser_manager
        self.router = Router()
        self.users_waiting_for_url = set()
        self._setup_handlers()

    def _setup_handlers(self):
        self.router.message.register(self.start_command, Command("start"))
        self.router.message.register(self.stop_command, Command("stop"))
        self.router.message.register(self.status_command, Command("status"))
        self.router.message.register(self.help_command, Command("help"))
        self.router.message.register(self.seturl_command, Command("seturl"))
        self.router.message.register(
            self.handle_url_message,
            lambda message: self._is_url_message(message),
        )
        self.router.message.register(self.handle_text_message)

    def _is_url_message(self, message: Message) -> bool:
        if not message.text:
            return False
        text = message.text.strip()
        return text.startswith("http")

    async def start_command(self, message: Message):
        result = await self.parser_manager.start_parsing(message.chat.id)
        await message.answer(f"üöÄ {result}")

    async def stop_command(self, message: Message):
        await self.parser_manager.stop_parsing()
        await message.answer("‚èπÔ∏è –ü–∞—Ä—Å–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    async def status_command(self, message: Message):
        status = self.parser_manager.get_status()
        status_text = (
            f"üìä –°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞:\n\n"
            f"üîÑ –†–∞–±–æ—Ç–∞–µ—Ç: {'–î–∞' if status.is_running else '–ù–µ—Ç'}\n"
            f"‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª: {status.interval_seconds} —Å–µ–∫\n"
            f"üîÑ –¶–∏–∫–ª: {'–í–∫–ª—é—á–µ–Ω' if status.cycle_enabled else '–û—Ç–∫–ª—é—á–µ–Ω'}\n"
            f"‚ö° –ú–∞–∫—Å. –ø–æ—Ç–æ–∫–æ–≤: {status.max_concurrency}"
        )
        await message.answer(status_text)

    async def help_command(self, message: Message):
        help_text = (
            "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n"
            "üöÄ /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ Mobile.de\n"
            "‚èπÔ∏è /stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø–∞—Ä—Å–∏–Ω–≥\n"
            "üìä /status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞\n"
            "üîó /seturl - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞\n"
            "‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
            "üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É Mobile.de –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞\n"
            "–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∞—Ä—Ö–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏."
        )
        await message.answer(help_text)

    async def seturl_command(self, message: Message):
        self.users_waiting_for_url.add(message.chat.id)
        await message.answer(
            "üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É Mobile.de –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.\n"
            "–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://mobile.de/ru/\n\n"
            "‚è≥ –û–∂–∏–¥–∞—é —Å—Å—ã–ª–∫—É..."
        )

    async def handle_url_message(self, message: Message):
        text = message.text
        if text is None:
            return

        text = text.strip()

        if text.startswith("http"):
            if text.startswith("https://mobile.de/ru/") or text.startswith(
                "https://www.mobile.de/ru/"
            ):
                self.config.parser.base_search_url = text

                self.users_waiting_for_url.discard(message.chat.id)

                await message.answer(
                    f"‚úÖ –°—Å—ã–ª–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {text}\n"
                    f"–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥–æ–π /start"
                )
                logger.info(f"URL set by user {message.chat.id}: {text}")
            else:
                await message.answer(
                    "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!\n"
                    "–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://mobile.de/ru/\n\n"
                    "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /seturl –¥–ª—è –æ—Ç–º–µ–Ω—ã"
                )
        else:
            if message.chat.id in self.users_waiting_for_url:
                await message.answer(
                    "‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É.\n"
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É, –Ω–∞—á–∏–Ω–∞—é—â—É—é—Å—è —Å https://mobile.de/ru/\n\n"
                    "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /seturl –¥–ª—è –æ—Ç–º–µ–Ω—ã"
                )

    async def handle_text_message(self, message: Message):
        if message.chat.id in self.users_waiting_for_url:
            await message.answer(
                "‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É.\n"
                "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É, –Ω–∞—á–∏–Ω–∞—é—â—É—é—Å—è —Å https://mobile.de/ru/\n\n"
                "üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /seturl –¥–ª—è –æ—Ç–º–µ–Ω—ã"
            )

    async def setup_commands(self, bot):
        commands = [
            BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥"),
            BotCommand(command="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥"),
            BotCommand(command="status", description="–°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞"),
            BotCommand(command="seturl", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É"),
            BotCommand(command="help", description="–°–ø—Ä–∞–≤–∫–∞"),
        ]

        try:
            await bot.set_my_commands(commands)
            logger.info("Bot commands set successfully")
        except Exception as e:
            logger.error(f"Failed to set bot commands: {e}")
